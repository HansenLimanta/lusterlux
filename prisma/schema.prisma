generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  cart          CartItem[]
  orders        Order[]
  role          String    @default("USER")
}


model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Guestbook {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    name      String
    message   String   @db.VarChar(100)
}

model Product {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    name      String
    price     Int 
    image     String? 
    description String?
    stock     Int
    cartItem  CartItem[]
}

model Order {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    name      String
    email     String
    address   String
    city      String
    state     String
    zip       String
    status    String
    total     Int
    items     OrderItem[]
    user      User     @relation(fields: [userId], references: [id])
    userId    String
}

model OrderItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    name      String
    price     Int
    quantity  Int
    image     String
    order     Order    @relation(fields: [orderId], references: [id])
    orderId   String
}

model  CartItem  {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    name      String
    quantity  Int
    price     Int
    total     Int
    productId String   
    product   Product  @relation(fields: [productId], references: [id])
    userId    String
    user      User     @relation(fields: [userId], references: [id])
}
